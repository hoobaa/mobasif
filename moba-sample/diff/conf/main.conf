package _;

use Sys::Hostname;

#===========================================================
# DEBUG 設定

our $TEST_MODE      = 1; # 1:開発環境フラグ
our $DEBUG_FAKE_UID = 1; # User-Agent に UID を入れられる(*1)
our $DEBUG_TEST_SSL = 1; # SSL 使わない

# *1 社内IPから接続した際に、User-Agent の後ろに ;U={UID} を追記すると、
#    x-dcmguid, x-up-subno, x-jphone-uid に渡したのと同じように扱われる。

#===========================================================
# ディレクトリ設定

use lib "$ENV{MOBA_DIR}/pm";

our $HOST          =  hostname();

our $HOME_DIR      =  $ENV{MOBA_DIR};
our $DATA_DIR      = "$HOME_DIR/data";     # データディレクトリ

our $CONF_DIR      = "$HOME_DIR/conf";     # 設定ファイル
our $HTML_DIR      = "$HOME_DIR/html";     # DocumentRoot
our $TEMPLATE_DIR  = "$HOME_DIR/template"; # テンプレディレクトリ

our $HTML_BIN_DIR  = "$DATA_DIR/html_bin"; # コンパイル済みテンプレ(HTML)
our $MAIL_BIN_DIR  = "$DATA_DIR/mail_bin"; # コンパイル済みテンプレ(MAIL)
our $QUEUE_DIR     = "$DATA_DIR/queue";    # 各種キュー処理のデータ
our $LOG_DIR       = "$DATA_DIR/log";      # log
our $RUN_DIR       = "$DATA_DIR/run";      # 稼動状況データ
our $TMP_DIR       = "$DATA_DIR/tmp";      # tmp

our $MCODE_DIR     = "$DATA_DIR/dat/mcode/"; # 絵文字変換マップディレクトリ
our @IPIDENT_FILES = # 接続元判別データファイル
	("$CONF_DIR/ipident.conf", "$CONF_DIR/ipident_local.conf");

our $LOG_FCGI_ERR  = "$LOG_DIR/fcgi.err";

#===========================================================
# HTTP 設定

our $DOMAIN     = '###DOMAIN###'; # サービスドメイン
our $HTTP_HOST  = $DOMAIN;        # http  の場合のホスト名
our $HTTPS_HOST = $DOMAIN;        # https の場合のホスト名
our $PC_HOST    = "www.$DOMAIN";  # PC から接続された場合のリダイレクト先

#===========================================================
# DB 設定

# mysql の user / password

our ( $MY_USER_W, $MY_PASS_W ) = ( '###PROJ_NAME###_w', '' ); # 書き込み可能
our ( $MY_USER_R, $MY_PASS_R ) = ( '###PROJ_NAME###_r', '' ); # 読み込み専用

# DB ハンドル取得用変数の設定

# $dbh = DA::getHandle($_::DB_USER_R) のように使う

our $DB_SEQ = 'SEQUENCE';

our ( $DB_USER_W ,   $DB_USER_R ,  $DB_USER_BAK   )  =
    (    'USER_W',      'USER_R',     'USER_R'    );
our ( $DB_DIARY_W ,  $DB_DIARY_R ,  $DB_DIARY_BAK )  =
    (    'DIARY_W',     'DIARY_R',     'DIARY_R'  );

# DB ハンドルの設定

# TX:      1=innodbへの書き込み用(autocommit=0) 0=それ以外(autocommit=1)
# RELEASE: 1=DA::reset() に到達した時点で disconnect する

%DA::CONF = (

'USER_W' => {
	HOST => 'localhost', DB => '###PROJ_NAME###_user',
	USER => $_::MY_USER_W, PASS => $_::MY_PASS_W, TX => 1, RELEASE => 1},
'USER_R' => {
	HOST => 'localhost', DB => '###PROJ_NAME###_user',
	USER => $_::MY_USER_R, PASS => $_::MY_PASS_R, TX => 0, RELEASE => 0},

'SEQUENCE' => {
	HOST => 'localhost', DB => '###PROJ_NAME###_seq',
	USER => $_::MY_USER_W, PASS => $_::MY_PASS_W, TX => 0, RELEASE => 1},

'DIARY_W' => {
	HOST => 'localhost', DB => '###PROJ_NAME###_diary',
	USER => $_::MY_USER_W, PASS => $_::MY_PASS_W, TX => 1, RELEASE => 1},
'DIARY_R' => {
	HOST => 'localhost', DB => '###PROJ_NAME###_diary',
	USER => $_::MY_USER_R, PASS => $_::MY_PASS_R, TX => 0, RELEASE => 1},

);

#===========================================================
# DAEMON 設定

# 0:非動作 1:動作可 2:動作必須

# 2 のものは daemonctl start|stop|restart|status で処理される、
# 1 のものは個別で start|stop する。

%Daemon::CONF = (
	'daemon_queue_send' => 2, # リモートサーバにログ転送
	'daemon_queue_recv' => 2, # リモートサーバからログ受信
	'daemon_acc_diary'  => 2, # 日記アクセス数の更新
);

# 実際は自ホスト名により動作可否を判定

#===========================================================
# その他

# daemon_queue_**** 関連

our $REMOTE_QUEUE_DIR  = "$QUEUE_DIR/remote";
our $REMOTE_QUEUE_FILE = "$REMOTE_QUEUE_DIR/queue_send";
our @REMOTE_QUEUE_HOST = ('localhost');
our $REMOTE_QUEUE_PORT = 4001;

1;
